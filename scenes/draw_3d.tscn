[gd_scene load_steps=2 format=3 uid="uid://b41dl1bx7tp07"]

[sub_resource type="GDScript" id="GDScript_1eqfm"]
script/source = "extends Node

#@export var mesh_line

#credits to: https://github.com/Ryan-Mirch/Line-and-Sphere-Drawing/blob/main/Draw3D.gd


func clear_all():
	var children = get_children()
	for child in children:
		remove_child(child)


func draw_line(pos1: Vector3, pos2: Vector3, color = Color.WHITE_SMOKE):
	var mesh_instance := MeshInstance3D.new()
	var line_mesh := PlaneMesh.new() # ImmediateMesh.new()
	var material := ORMMaterial3D.new()
	
	material.shading_mode = BaseMaterial3D.SHADING_MODE_UNSHADED
	material.albedo_color = color
	
	line_mesh.material = material
	
	mesh_instance.mesh = line_mesh
	mesh_instance.cast_shadow = GeometryInstance3D.SHADOW_CASTING_SETTING_OFF

	#immediate_mesh.surface_begin(Mesh.PRIMITIVE_LINES, material)
	#immediate_mesh.surface_add_vertex(pos1)
	#immediate_mesh.surface_add_vertex(pos2)
	#immediate_mesh.surface_end()
	
	add_child(mesh_instance)
		
	var vector: Vector2 = Vector2(pos2.x, pos2.z) - Vector2(pos1.x, pos1.z)
	
	mesh_instance.rotation = Vector3(0, -vector.angle(), 0)
	mesh_instance.global_position = pos1 + (pos2 - pos1) / 2.0
	mesh_instance.scale = Vector3(pos1.distance_to(pos2) * 0.5, 1.0, 0.05)


func draw_point(pos:Vector3, radius = 0.1, color = Color.WHITE_SMOKE):
	var mesh_instance := MeshInstance3D.new()
	var sphere_mesh := SphereMesh.new()
	var material := ORMMaterial3D.new()
		
	mesh_instance.mesh = sphere_mesh
	mesh_instance.cast_shadow = GeometryInstance3D.SHADOW_CASTING_SETTING_OFF
	mesh_instance.position = pos
	
	sphere_mesh.radius = radius
	sphere_mesh.height = radius*2
	sphere_mesh.material = material
	
	material.shading_mode = BaseMaterial3D.SHADING_MODE_UNSHADED
	material.albedo_color = color
	
	add_child(mesh_instance)

"

[node name="Draw3d" type="Node3D"]
script = SubResource("GDScript_1eqfm")
